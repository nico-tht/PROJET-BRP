package fr.formation.inti.entity;
// Generated 4 mai 2022, 10:40:33 by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.Arrays;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Photo generated by hbm2java
 */
@Entity
@Table(name = "photo", catalog = "test_brp")
public class Photo implements java.io.Serializable {

	private Integer photoId;
	private Book book;
	@Column(name = "users")
	private Users users;
	@Lob
	@Column(name = "photo")
	private byte[] photo;
	@Column(name = "photoRole")
	private String photoRole;

	public Photo() {
	}

	public Photo(Users users, byte[] photo, String photoRole) {
		this.users = users;
		this.photo = photo;
		this.photoRole = photoRole;
	}
	
	public Photo(Book book, Users users, byte[] photo, String photoRole) {
		this.book = book;
		this.users = users;
		this.photo = photo;
		this.photoRole = photoRole;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "photo_id", unique = true, nullable = false)
	public Integer getPhotoId() {
		return this.photoId;
	}

	public void setPhotoId(Integer photoId) {
		this.photoId = photoId;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade = CascadeType.PERSIST)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "photo", nullable = false)
	public byte[] getPhoto() {
		return this.photo;
	}

	public void setPhoto(byte[] photo) {
		this.photo = photo;
	}

	@Column(name = "photo_role", nullable = false, length = 45)
	public String getPhotoRole() {
		return this.photoRole;
	}

	public void setPhotoRole(String photoRole) {
		this.photoRole = photoRole;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "book_id")
	public Book getBook() {
		return this.book;
	}

	public void setBook(Book book) {
		this.book = book;
	}

	@Override
	public String toString() {
		return "Photo [photoId=" + photoId + ", users=" + users + ", photo=" + Arrays.toString(photo) + ", photoRole="
				+ photoRole + "]";
	}
	
	

}
